version: "3"

vars:
  PROGRAM: template

tasks:
  deps:
    cmds:
      - go mod tidy -v

  update:
    deps: [htmx-update, templ]
    cmds:
      - go get -u
      - go mod tidy -v

  templ:
    cmds:
      - templ generate

  setup:
    cmds:
      - go install github.com/a-h/templ/cmd/templ@latest
      - go install github.com/air-verse/air@latest
      - go install github.com/pressly/goose/v3/cmd/goose@latest
      - go install mvdan.cc/gofumpt@latest
      - npm i -D tailwindcss@latest
      - npm i -D @tailwindcss/typography
      - npm i -D daisyui@latest

  build:
    aliases: [default]
    deps: [deps, templ, tailwind]
    env:
      CGO_ENABLED: 0
    cmds:
      - go fmt ./...
      - gofumpt -l -w .
      - templ fmt .
      - go vet ./...
      - go build -o {{.PROGRAM}}

  test:
    deps: [deps, templ]
    env:
      CGO_ENABLED: 1 # required by -race
    cmds:
      - go test -race -cover ./...

  run:
    deps: [build]
    cmds:
      - ./{{.PROGRAM}} -debug -config config.json

  htmx-update:
    cmds:
      - wget -nv -O ./internal/server/assets/web/scripts/htmx.min.js https://unpkg.com/htmx.org@latest/dist/htmx.min.js

  tailwind:
    cmds:
      - npx tailwindcss -i ./internal/server/assets/web/css/input.css -o ./internal/server/assets/web/css/style.min.css --minify

  lint:
    cmds:
      - golangci-lint run ./... --timeout=30m
      - go mod tidy

  lint-update:
    cmds:
      - curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b {{ .GOPATH }}/bin
      - golangci-lint --version
    vars:
      GOPATH:
        sh: go env GOPATH

  tag:
    cmds:
      - git tag -a "${TAG}" -m "${TAG}"
      - git push origin "${TAG}"
    preconditions:
      - sh: '[[ -n "${TAG}" ]]'
        msg: "Please set the TAG environment variable"